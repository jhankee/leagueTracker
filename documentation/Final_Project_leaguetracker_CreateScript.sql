-- MySQL Script generated by MySQL Workbench
-- Mon Jul  5 10:24:42 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema leaguetracker
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema leaguetracker
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `leaguetracker` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `leaguetracker` ;

-- -----------------------------------------------------
-- Table `leaguetracker`.`coach`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`coach` (
  `coachID` INT NOT NULL AUTO_INCREMENT,
  `coachType` VARCHAR(45) NULL DEFAULT NULL,
  `coachFirstName` VARCHAR(45) NULL DEFAULT NULL,
  `coachLastName` VARCHAR(45) NULL DEFAULT NULL,
  `hasClearances` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`coachID`))
ENGINE = InnoDB
AUTO_INCREMENT = 61
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `leaguetracker`.`division`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`division` (
  `divisionID` INT NOT NULL AUTO_INCREMENT,
  `divisionName` VARCHAR(45) NULL DEFAULT NULL,
  `startAgeDOB` DATE NULL DEFAULT NULL,
  `endAgeDOB` DATE NULL DEFAULT NULL,
  `cost` INT NULL DEFAULT NULL,
  PRIMARY KEY (`divisionID`))
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `leaguetracker`.`team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`team` (
  `teamID` INT NOT NULL AUTO_INCREMENT,
  `teamName` VARCHAR(45) NULL DEFAULT NULL,
  `divisionID` INT NOT NULL,
  PRIMARY KEY (`teamID`, `divisionID`),
  INDEX `fk_team_division1_idx` (`divisionID` ASC) VISIBLE,
  CONSTRAINT `fk_team_division1`
    FOREIGN KEY (`divisionID`)
    REFERENCES `leaguetracker`.`division` (`divisionID`))
ENGINE = InnoDB
AUTO_INCREMENT = 41
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `leaguetracker`.`coach_has_team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`coach_has_team` (
  `coachID` INT NOT NULL,
  `teamID` INT NOT NULL,
  PRIMARY KEY (`coachID`, `teamID`),
  INDEX `fk_coach_has_team_team1_idx` (`teamID` ASC) VISIBLE,
  INDEX `fk_coach_has_team_coach1_idx` (`coachID` ASC) VISIBLE,
  CONSTRAINT `fk_coach_has_team_coach1`
    FOREIGN KEY (`coachID`)
    REFERENCES `leaguetracker`.`coach` (`coachID`),
  CONSTRAINT `fk_coach_has_team_team1`
    FOREIGN KEY (`teamID`)
    REFERENCES `leaguetracker`.`team` (`teamID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `leaguetracker`.`family`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`family` (
  `familyID` INT NOT NULL AUTO_INCREMENT,
  `contact1FirstName` VARCHAR(45) NULL DEFAULT NULL,
  `contact1LastName` VARCHAR(45) NULL DEFAULT NULL,
  `contact2FirstName` VARCHAR(45) NULL DEFAULT NULL,
  `contact2LastName` VARCHAR(45) NULL DEFAULT NULL,
  `addressLine1` VARCHAR(45) NULL DEFAULT NULL,
  `addressLine2` VARCHAR(45) NULL DEFAULT NULL,
  `city` VARCHAR(45) NULL DEFAULT NULL,
  `state` VARCHAR(45) NULL DEFAULT NULL,
  `zipCode` VARCHAR(45) NULL DEFAULT NULL,
  `PrimaryPhone` INT NULL DEFAULT NULL,
  `email` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`familyID`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `leaguetracker`.`invoice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`invoice` (
  `invoiceID` INT NOT NULL AUTO_INCREMENT,
  `familyID` INT NOT NULL,
  `paidStatus` VARCHAR(45) NULL DEFAULT NULL,
  `amount` INT NULL DEFAULT NULL,
  PRIMARY KEY (`invoiceID`, `familyID`),
  INDEX `fk_invoice_family1_idx` (`familyID` ASC) VISIBLE,
  CONSTRAINT `fk_invoice_family1`
    FOREIGN KEY (`familyID`)
    REFERENCES `leaguetracker`.`family` (`familyID`))
ENGINE = InnoDB
AUTO_INCREMENT = 55
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `leaguetracker`.`player`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`player` (
  `playerID` INT NOT NULL AUTO_INCREMENT,
  `playerFirstName` VARCHAR(45) NULL DEFAULT NULL,
  `playerLastName` VARCHAR(45) NULL DEFAULT NULL,
  `dateOfBirth` DATE NULL DEFAULT NULL,
  `familyID` INT NOT NULL,
  `teamID` INT NULL DEFAULT NULL,
  `registrationDate` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`playerID`),
  INDEX `fk_player_family_idx` (`familyID` ASC) VISIBLE,
  INDEX `fk_player_team1_idx` (`teamID` ASC) VISIBLE,
  CONSTRAINT `fk_player_family`
    FOREIGN KEY (`familyID`)
    REFERENCES `leaguetracker`.`family` (`familyID`),
  CONSTRAINT `fk_player_team1`
    FOREIGN KEY (`teamID`)
    REFERENCES `leaguetracker`.`team` (`teamID`))
ENGINE = InnoDB
AUTO_INCREMENT = 60
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `leaguetracker` ;

-- -----------------------------------------------------
-- Placeholder table for view `leaguetracker`.`v_all_rosters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`v_all_rosters` (`Division Name` INT, `Team Name` INT, `Player Name` INT);

-- -----------------------------------------------------
-- Placeholder table for view `leaguetracker`.`v_coach_missing_clearances`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`v_coach_missing_clearances` (`coachLastName` INT, `coachFirstName` INT, `hasClearances` INT);

-- -----------------------------------------------------
-- Placeholder table for view `leaguetracker`.`v_team_coaches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`v_team_coaches` (`Division` INT, `Team` INT, `Coach` INT, `Type` INT);

-- -----------------------------------------------------
-- Placeholder table for view `leaguetracker`.`v_team_roster_size`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`v_team_roster_size` (`teamName` INT, `teamID` INT, `RosterSize` INT);

-- -----------------------------------------------------
-- Placeholder table for view `leaguetracker`.`v_unassign_players`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `leaguetracker`.`v_unassign_players` (`playerID` INT, `playerFirstName` INT, `playerLastName` INT, `dateOfBirth` INT, `familyID` INT, `teamID` INT, `registrationDate` INT);

-- -----------------------------------------------------
-- procedure insert_invoice
-- -----------------------------------------------------

DELIMITER $$
USE `leaguetracker`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_invoice`(player int,family int)
begin
   insert into invoice (familyID,paidStatus,amount) values (family,'False',
        (select cost from division
        where divisionID = (select divisionId from division
        where (date(startAgeDOB) < (select date(dateOfBirth) from player where playerId=player)
        and date(endAgeDOB) >(select date(dateOfBirth) from player where playerId=player)))));
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `leaguetracker`.`v_all_rosters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `leaguetracker`.`v_all_rosters`;
USE `leaguetracker`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `leaguetracker`.`v_all_rosters` AS select `leaguetracker`.`division`.`divisionName` AS `Division Name`,`leaguetracker`.`team`.`teamName` AS `Team Name`,concat(`leaguetracker`.`player`.`playerLastName`,', ',`leaguetracker`.`player`.`playerLastName`) AS `Player Name` from ((`leaguetracker`.`player` join `leaguetracker`.`team` on((`leaguetracker`.`player`.`teamID` = `leaguetracker`.`team`.`teamID`))) join `leaguetracker`.`division` on((`leaguetracker`.`team`.`divisionID` = `leaguetracker`.`division`.`divisionID`))) order by `leaguetracker`.`division`.`divisionName`,`leaguetracker`.`team`.`teamName`;

-- -----------------------------------------------------
-- View `leaguetracker`.`v_coach_missing_clearances`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `leaguetracker`.`v_coach_missing_clearances`;
USE `leaguetracker`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `leaguetracker`.`v_coach_missing_clearances` AS select `leaguetracker`.`coach`.`coachLastName` AS `coachLastName`,`leaguetracker`.`coach`.`coachFirstName` AS `coachFirstName`,`leaguetracker`.`coach`.`hasClearances` AS `hasClearances` from `leaguetracker`.`coach` where (`leaguetracker`.`coach`.`hasClearances` = 'False');

-- -----------------------------------------------------
-- View `leaguetracker`.`v_team_coaches`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `leaguetracker`.`v_team_coaches`;
USE `leaguetracker`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `leaguetracker`.`v_team_coaches` AS select `leaguetracker`.`division`.`divisionName` AS `Division`,`leaguetracker`.`team`.`teamName` AS `Team`,concat(`leaguetracker`.`coach`.`coachLastName`,', ',`leaguetracker`.`coach`.`coachFirstName`) AS `Coach`,`leaguetracker`.`coach`.`coachType` AS `Type` from (((`leaguetracker`.`team` join `leaguetracker`.`coach_has_team` on((`leaguetracker`.`team`.`teamID` = `leaguetracker`.`coach_has_team`.`teamID`))) join `leaguetracker`.`coach` on((`leaguetracker`.`coach_has_team`.`coachID` = `leaguetracker`.`coach`.`coachID`))) join `leaguetracker`.`division` on((`leaguetracker`.`team`.`divisionID` = `leaguetracker`.`division`.`divisionID`))) order by `leaguetracker`.`division`.`divisionName`,`leaguetracker`.`team`.`teamName`;

-- -----------------------------------------------------
-- View `leaguetracker`.`v_team_roster_size`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `leaguetracker`.`v_team_roster_size`;
USE `leaguetracker`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `leaguetracker`.`v_team_roster_size` AS select `leaguetracker`.`team`.`teamName` AS `teamName`,`leaguetracker`.`team`.`teamID` AS `teamID`,count(`leaguetracker`.`player`.`playerID`) AS `RosterSize` from (`leaguetracker`.`team` left join `leaguetracker`.`player` on((`leaguetracker`.`player`.`teamID` = `leaguetracker`.`team`.`teamID`))) group by `leaguetracker`.`team`.`teamID`;

-- -----------------------------------------------------
-- View `leaguetracker`.`v_unassign_players`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `leaguetracker`.`v_unassign_players`;
USE `leaguetracker`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `leaguetracker`.`v_unassign_players` AS select `leaguetracker`.`player`.`playerID` AS `playerID`,`leaguetracker`.`player`.`playerFirstName` AS `playerFirstName`,`leaguetracker`.`player`.`playerLastName` AS `playerLastName`,`leaguetracker`.`player`.`dateOfBirth` AS `dateOfBirth`,`leaguetracker`.`player`.`familyID` AS `familyID`,`leaguetracker`.`player`.`teamID` AS `teamID`,`leaguetracker`.`player`.`registrationDate` AS `registrationDate` from `leaguetracker`.`player` where (`leaguetracker`.`player`.`teamID` is null);
USE `leaguetracker`;

DELIMITER $$
USE `leaguetracker`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `leaguetracker`.`after_insert_player`
AFTER INSERT ON `leaguetracker`.`player`
FOR EACH ROW
BEGIN
    call insert_invoice (New.playerid,New.familyID);
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
